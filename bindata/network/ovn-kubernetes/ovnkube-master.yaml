# The ovnkube control-plane components
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: ovnkube-master
  namespace: openshift-ovn-kubernetes
  annotations:
    kubernetes.io/description: |
      This daemonset launches the ovn-kubernetes controller (master) networking components.
    release.openshift.io/version: "{{.ReleaseVersion}}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ovnkube-master
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: ovnkube-master
        component: network
        type: infra
        openshift.io/component: network
        kubernetes.io/os: "linux"
    spec:
      serviceAccountName: ovn-kubernetes-controller
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      priorityClassName: "system-cluster-critical"
      hostAliases:
      - ip: "{{.OVN_CLUSTER_JOIN_POINT}}"
        hostnames:
        - "ovnkube-db.openshift-ovn-kubernetes.svc.cluster.local"
      # volumes in all containers:
      # (container) -> (host)
      # /etc/openvswitch -> /var/lib/ovn/etc - ovsdb data
      # /var/lib/openvswitch -> /var/lib/ovn/data - ovsdb pki state
      # /run/openvswitch -> tmpfs - sockets & pids
      # /env -> configmap env-overrides - debug overrides
      containers:
      # ovn-northd: convert network objects in nbdb to flows in sbdb
      - name: northd
        image: "{{.OvnImage}}"
        command:
        - /bin/bash
        - -c
        - |
          set -xe
          if [[ -f /env/_master ]]; then
            set -o allexport
            source /env/_master
            set +o allexport
          fi

          # Perform DNS resolution against the DNS resolver first and /etc/hosts second
          sed -i 's/hosts:      files dns myhostname/hosts:      dns files myhostname/g' /etc/nsswitch.conf

          exec ovn-northd \
            --no-chdir "-vconsole:${OVN_LOG_LEVEL}" -vfile:off \
            --pidfile=/var/run/openvswitch/ovn-northd.pid \
            --ovnnb-db ssl:${OVN_DB_SVC_NAME}.${OVN_NAMESPACE}.svc.cluster.local:{{.OVN_NB_PORT}} \
            --ovnsb-db ssl:${OVN_DB_SVC_NAME}.${OVN_NAMESPACE}.svc.cluster.local:{{.OVN_SB_PORT}} \
            -p /ovn-cert/tls.key \
            -c /ovn-cert/tls.crt \
            -C /ovn-ca/ca-bundle.crt 
        env:
        - name: OVN_LOG_LEVEL
          value: info 
        - name: OVN_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: OVN_DB_SVC_NAME
          value: "ovnkube-db"
        volumeMounts:
        - mountPath: /etc/openvswitch/
          name: etc-openvswitch
        - mountPath: /var/lib/openvswitch/
          name: var-lib-openvswitch
        - mountPath: /run/openvswitch/
          name: run-openvswitch
        - mountPath: /env
          name: env-overrides
        - mountPath: /ovn-cert # not needed, but useful when exec'ing in to pod.
          name: ovn-cert
        - mountPath: /ovn-ca
          name: ovn-ca
        resources:
          requests:
            cpu: 100m
            memory: 300Mi
        terminationMessagePolicy: FallbackToLogsOnError

      # ovnkube master: convert kubernetes objects in to nbdb logical network components
      - name: ovnkube-master
        image: "{{.OvnImage}}"
        command:
        - /bin/bash
        - -c
        - |
          set -xe
          if [[ -f "/env/_master" ]]; then
            set -o allexport
            source "/env/_master"
            set +o allexport
          fi
          
          # Perform DNS resolution against the DNS resolver first and /etc/hosts second
          sed -i 's/hosts:      files dns myhostname/hosts:      dns files myhostname/g' /etc/nsswitch.conf

          hybrid_overlay_flags=
          if [[ -n "{{.OVNHybridOverlayEnable }}" ]]; then
            hybrid_overlay_flags="--enable-hybrid-overlay"
            if [[ -n "{{.OVNHybridOverlayNetCIDR}}" ]]; then
              hybrid_overlay_flags="${hybrid_overlay_flags} --hybrid-overlay-cluster-subnets={{.OVNHybridOverlayNetCIDR}}"
            fi
          fi

          # start nbctl daemon for caching
          export OVN_NB_DAEMON=$(ovn-nbctl --pidfile=/run/openvswitch/ovnk-nbctl.pid \
            --detach \
            -p /ovn-cert/tls.key -c /ovn-cert/tls.crt -C /ovn-ca/ca-bundle.crt \
            --db ssl:${OVN_DB_SVC_NAME}.${OVN_NAMEPSACE}.svc.cluster.local:{{.OVN_NB_PORT}})

          exec /usr/bin/ovnkube \
            --init-master "${K8S_NODE}" \
            --config-file=/run/ovnkube-config/ovnkube.conf \
            --ovn-empty-lb-events \
            --loglevel "${OVN_KUBE_LOG_LEVEL}" \
            ${hybrid_overlay_flags} \
            --metrics-bind-address "0.0.0.0:9102" \
            --sb-address ssl://${OVN_DB_SVC_NAME}.${OVN_NAMESPACE}.svc.cluster.local:{{.OVN_SB_PORT}} \
            --sb-client-privkey /ovn-cert/tls.key \
            --sb-client-cert /ovn-cert/tls.crt \
            --sb-client-cacert /ovn-ca/ca-bundle.crt
        lifecycle:
          preStop:
            exec:
              command: ["/bin/bash", "-c", "kill $(cat /run/openvswitch/ovnk-nbctl.pid)"]
        volumeMounts:
        - mountPath: /etc/openvswitch/
          name: etc-openvswitch
        - mountPath: /var/lib/openvswitch/
          name: var-lib-openvswitch
        - mountPath: /run/openvswitch/
          name: run-openvswitch
        - mountPath: /run/ovnkube-config/
          name: ovnkube-config
        - mountPath: /env
          name: env-overrides
        - mountPath: /ovn-cert
          name: ovn-cert
        - mountPath: /ovn-ca
          name: ovn-ca
        resources:
          requests:
            cpu: 100m
            memory: 300Mi
        env:
        - name: OVN_KUBE_LOG_LEVEL
          value: "4"
        - name: K8S_NODE
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: OVN_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: OVN_DB_SVC_NAME
          value: "ovnkube-db"
        - name: OVN_HYBRID_OVERLAY_ENABLE
          value: "{{ .OVNHybridOverlayEnable }}"
        - name: OVN_HYBRID_OVERLAY_NET_CIDR
          value: "{{ .OVNHybridOverlayNetCIDR }}"
        ports:
        - name: metrics-port
          containerPort: 9102
        terminationMessagePolicy: FallbackToLogsOnError

      nodeSelector:
        node-role.kubernetes.io/master: ""
        beta.kubernetes.io/os: "linux"
      volumes:
      - name: etc-openvswitch
        hostPath:
          path: /var/lib/ovn/etc
      - name: var-lib-openvswitch
        hostPath:
          path: /var/lib/ovn/data
      - name: run-openvswitch
        emptyDir: {}
      - name: ovnkube-config
        configMap:
          name: ovnkube-config
      - name: env-overrides
        configMap:
          name: env-overrides
          optional: true
      - name: ovn-ca
        configMap:
          name: ovn-ca
      - name: ovn-cert
        secret:
          secretName: ovn-cert
      tolerations:
      - key: "node-role.kubernetes.io/master"
        operator: "Exists"
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
      - key: "node.kubernetes.io/unschedulable"
        operator: "Exists"
      - key: "node.kubernetes.io/network-unavailable"
        operator: "Exists"
